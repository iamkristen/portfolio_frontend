{"version":3,"file":"static/js/582.da6285ec.chunk.js","mappings":"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","sources":["components/contact/Contact.js","components/home/Title.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FiSend } from \"react-icons/fi\";\r\nimport { ImSpinner2 } from \"react-icons/im\"; // Import spinner icon\r\nimport Title from \"../home/Title\";\r\nimport { useContactData } from \"../../context/contact\";\r\n\r\nconst Contact = () => {\r\n  const { contactData, fetchData, isLoading, error } = useContactData();\r\n\r\n  const [formData, setFormData] = useState({\r\n    clientName: \"\",\r\n    inputEmail: \"\",\r\n    messages: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    clientName: false,\r\n    inputEmail: false,\r\n    messages: false,\r\n  });\r\n\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Fetch contact data when the component mounts\r\n  }, [fetchData]);\r\n\r\n  const emailValidation = useCallback((inputEmail) => {\r\n    return String(inputEmail)\r\n      .toLowerCase()\r\n      .match(/^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/);\r\n  }, []);\r\n\r\n  const handleChange = useCallback((e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n    setErrors((prev) => ({ ...prev, [name]: false }));\r\n  }, []);\r\n\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true); // Start loading\r\n\r\n    const { clientName, inputEmail, messages } = formData;\r\n\r\n    const newErrors = {\r\n      clientName: !clientName,\r\n      inputEmail: !inputEmail || !emailValidation(inputEmail),\r\n      messages: !messages,\r\n    };\r\n\r\n    setErrors(newErrors);\r\n\r\n    if (Object.values(newErrors).some((error) => error)) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        process.env.REACT_APP_API_URL + \"api/mailbox/add\",\r\n        {\r\n          fullName: clientName,\r\n          email: inputEmail,\r\n          message: messages,\r\n        }\r\n      );\r\n\r\n      if (response.data.success) {\r\n        setSuccessMsg(\r\n          `Hello ${clientName}, your message has been sent successfully. Thank you for contacting us!`\r\n        );\r\n        setFormData({ clientName: \"\", inputEmail: \"\", messages: \"\" });\r\n      } else {\r\n        setErrorMsg(\"Failed to send the message. Please try again later.\");\r\n        console.error(\"Failed to send message:\", response.data.error);\r\n      }\r\n    } catch (error) {\r\n      setErrorMsg(\"Error sending message. Please try again later.\");\r\n      console.error(\"Error sending message:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"w-full text-center\">\r\n        <ImSpinner2 className=\"animate-spin text-4xl text-designColor\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"w-full text-center text-red-500\">\r\n        Error loading contact information.\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <Title title=\"Get\" subTitle=\"in Touch\" />\r\n      <div className=\"p-6 w-full flex flex-col md:flex-row justify-between gap-4 md:gap-10 lgl:gap-20\">\r\n        <div className=\"w-full lgl:w-1/2\">\r\n          <p className=\"flex gap-6 justify-between w-full text-lg text-[#ccc] py-4 border-b-[1px] border-b-zinc-800\">\r\n            <span className=\"bg-designColor text-gray-700 text-sm font-titleFont font-medium px-2 rounded-md flex items-center justify-center\">\r\n              Address\r\n            </span>\r\n            {contactData.address}\r\n          </p>\r\n          <p className=\"flex justify-between w-full text-lg text-[#ccc] py-4 border-b-[1px] border-b-zinc-800\">\r\n            <span className=\"bg-designColor text-gray-700 text-sm font-titleFont font-medium px-2 rounded-md flex items-center justify-center\">\r\n              Phone\r\n            </span>\r\n            {contactData.phone}\r\n          </p>\r\n        </div>\r\n        <div className=\"w-full lgl:w-1/2\">\r\n          <p className=\"flex justify-between lgl:gap-6 w-full text-lg text-[#ccc] py-4 border-b-[1px] border-b-zinc-800\">\r\n            <span className=\"bg-designColor text-gray-700 text-sm font-titleFont font-medium px-2 rounded-md flex items-center justify-center\">\r\n              Email\r\n            </span>\r\n            {contactData.email}\r\n          </p>\r\n          <p className=\"flex justify-between w-full text-lg text-[#ccc] py-4 border-b-[1px] border-b-zinc-800\">\r\n            <span className=\"bg-designColor text-gray-700 text-sm font-titleFont font-medium px-2 rounded-md flex items-center justify-center\">\r\n              Freelance\r\n            </span>\r\n            {contactData.freelance}\r\n          </p>\r\n          <p className=\"flex justify-between w-full text-lg text-[#ccc] py-4 border-b-[1px] border-b-zinc-800\">\r\n            <span className=\"bg-designColor text-gray-700 text-sm font-titleFont font-medium px-2 rounded-md flex items-center justify-center\">\r\n              Open to\r\n            </span>\r\n            {contactData.openTo}\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"w-full mt-10\">\r\n        <Title title=\"Send\" subTitle=\"Messages\" />\r\n        {successMsg ? (\r\n          <p className=\"text-center text-base font-titleFont p-20 text-designColor\">\r\n            {successMsg}\r\n          </p>\r\n        ) : (\r\n          <form className=\"p-6 flex flex-col gap-6\">\r\n            <div className=\"w-full flex flex-col lgl:flex-row gap-4 lgl:gap-10 justify-between\">\r\n              <input\r\n                name=\"clientName\"\r\n                onChange={handleChange}\r\n                value={formData.clientName}\r\n                className={`${\r\n                  errors.clientName\r\n                    ? \"border-red-600 focus-visible:border-red-600\"\r\n                    : \"border-zinc-600 focus-visible:border-designColor\"\r\n                } w-full bg-transparent border-2 px-4 py-2 text-base text-gray-200 outline-none duration-300`}\r\n                type=\"text\"\r\n                placeholder=\"Full Name\"\r\n              />\r\n              <input\r\n                name=\"inputEmail\"\r\n                onChange={handleChange}\r\n                value={formData.inputEmail}\r\n                className={`${\r\n                  errors.inputEmail\r\n                    ? \"border-red-600 focus-visible:border-red-600\"\r\n                    : \"border-zinc-600 focus-visible:border-designColor\"\r\n                } w-full bg-transparent border-2 px-4 py-2 text-base text-gray-200 outline-none duration-300`}\r\n                type=\"email\"\r\n                placeholder=\"Email Address\"\r\n              />\r\n            </div>\r\n            <textarea\r\n              name=\"messages\"\r\n              onChange={handleChange}\r\n              value={formData.messages}\r\n              className={`${\r\n                errors.messages\r\n                  ? \"border-red-600 focus-visible:border-red-600\"\r\n                  : \"border-zinc-600 focus-visible:border-designColor\"\r\n              } w-full bg-transparent border-2 px-4 py-2 text-base text-gray-200 outline-none duration-300 resize-none`}\r\n              placeholder=\"Your Message\"\r\n              rows=\"4\"\r\n            ></textarea>\r\n            {errorMsg && <p className=\"text-red-500\">{errorMsg}</p>}\r\n            <button\r\n              onClick={handleSend}\r\n              className=\"text-base w-44 flex items-center gap-2 justify-center text-gray-200 hover:text-designColor duration-200\"\r\n              disabled={loading} // Disable button while loading\r\n            >\r\n              {loading ? (\r\n                <>\r\n                  <ImSpinner2 className=\"animate-spin\" />\r\n                  Sending...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  Send Message{\" \"}\r\n                  <span className=\"mt-1 text-designColor\">\r\n                    <FiSend />\r\n                  </span>\r\n                </>\r\n              )}\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\n\r\nconst Title = ({ title, subTitle }) => {\r\n  return (\r\n    <h1 className=\"font-titleFont font-bold text-xl capitalize text-textColor relative z-10 px-6 py-3 border-b-[1px] border-b-zinc-800 group\">\r\n      <span className=\"text-designColor\">{title}</span> {subTitle}\r\n      <span className=\"w-8 h-8 bg-gradient-to-t from-designColor to-gray-600 inline-block rounded-full absolute left-2 top-3 opacity-10 -z-10 translate-x-0 group-hover:translate-x-24 transition-transform duration-500\"></span>\r\n    </h1>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n"],"names":["Contact","contactData","fetchData","isLoading","error","useContactData","formData","setFormData","useState","clientName","inputEmail","messages","errors","setErrors","successMsg","setSuccessMsg","errorMsg","setErrorMsg","loading","setLoading","useEffect","emailValidation","useCallback","String","toLowerCase","match","handleChange","e","name","value","target","prev","_jsx","className","children","ImSpinner2","_jsxs","Title","title","subTitle","address","phone","email","freelance","openTo","onChange","concat","type","placeholder","rows","onClick","async","preventDefault","newErrors","Object","values","some","response","axios","post","process","fullName","message","data","success","console","disabled","_Fragment","FiSend","_ref"],"sourceRoot":""}